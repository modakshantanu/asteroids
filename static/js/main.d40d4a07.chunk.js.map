{"version":3,"sources":["InputManager.js","utils/Vect.js","utils/constants.js","utils/2dgrid.js","utils/camera.js","gameComponents/Ship.js","utils/math.js","gameComponents/Asteroid.js","gameComponents/Bullet.js","gameComponents/Minimap.js","App.js","gameComponents/background.js","serviceWorker.js","index.js"],"names":["KEY","InputManager","Object","classCallCheck","this","pressedKeys","left","right","forward","space","window","addEventListener","handleKeys","bind","removeEventListener","value","e","keys","keyCode","Vect","x","arguments","length","undefined","y","createClass","key","vect2","scalar","rad","cos","Math","sin","constants","canvasBounds","width","height","gameBounds","minimapBounds","wrapAround","position","bounds","distance","v1","v2","sqrt","pow","rotateVector2d","vect","deg","PI","relativeCoords","focus","_constants$canvasBoun","Ship","args","pos","vel","radius","angle","lastFiredTime","Date","state","input","forwardAngle","add","rotate","dot","temp","shipCam","ctx","context","save","translate","strokeStyle","fillStyle","lineWidth","beginPath","moveTo","lineTo","closePath","fill","stroke","restore","_this","hitbox","push","map","_rotateVector2d","polygonsIntersect","require","randomBetween","low","high","random","checkPolygonIntersection","arr1","arr2","rotateUnit","degrees","radians","Asteroid","r","dr","distances","vertexDistances","sizeCategory","delete","splice","m","i","round","points","v","unitVector","reduce","a","b","max","ship","pathString","concat","path","Path2D","Bullet","lifeTime","arc","Minimap","asteroids","minimapContext","fillRect","forEach","GameStatus","RUNNING","OVER","animationFrameId","App","props","possibleConstructorReturn","getPrototypeOf","call","score","level","draw","assertThisInitialized","resetHandler","initLevel","debugFunc","gameStatus","bullets","minimap","bindKeys","refs","canvas","getContext","setState","requestAnimationFrame","off","document","createElement","j","back","cancelAnimationFrame","reset","blur","velMag","newDr","newPos","newVel","newDx","newDy","_this2","font","background","offX","offY","drawImage","drawDots","getTime","bArr","aArr","getHitbox","nextSize","arr","fillText","render","unbindKeys","cam","react_default","ref","id","onClick","React","Component","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d40d4a07.chunk.js","sourcesContent":["const KEY = {\r\n\tW: 87,\r\n\tA: 65,\r\n\tD: 68,\r\n\tSPACE: 32,\r\n };\r\n\r\n export default class InputManager {\r\n\r\n\tbindKeys() {\r\n\t\twindow.addEventListener('keyup',   this.handleKeys.bind(this, false));\r\n\t\twindow.addEventListener('keydown', this.handleKeys.bind(this, true));\r\n\t}\r\n\t  \r\n\tunbindKeys() {\r\n\t\twindow.removeEventListener('keyup', this.handleKeys);\r\n\t\twindow.removeEventListener('keydown', this.handleKeys);\r\n\t}\r\n\tconstructor() {\r\n\t\t this.pressedKeys = {left:0,right:0,forward:0,space:0}\r\n\t}\r\n\r\n\thandleKeys(value, e){\r\n\t\tlet keys = this.pressedKeys;\r\n\t\tswitch (e.keyCode) {\r\n\t\t\tcase KEY.A:\r\n\t\t\t\tkeys.left  = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.D:\r\n\t\t\t\tkeys.right  = value;\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase KEY.W:\r\n\t\t\t\tkeys.forward = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase KEY.SPACE:\r\n\t\t\t\tkeys.space  = value;\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t }\r\n\t\t this.pressedKeys = keys;\r\n\t }\r\n }","export class Vect {\r\n\tconstructor(x = 0 ,y = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tadd(vect2) {\r\n\t\treturn new Vect(this.x + vect2.x, this.y + vect2.y);\r\n\t}\r\n\r\n\tdot(scalar) {\r\n\t\treturn new Vect(scalar*this.x, scalar*this.y);\r\n\t}\r\n\r\n\t// rotate anticlockwise by angle radians\r\n\trotate(rad) {\r\n\t\tlet cos = Math.cos(rad);\r\n\t\tlet sin = Math.sin(rad);\r\n\t\treturn new Vect(cos*this.x - sin*this.y, sin*this.x + cos*this.y);\r\n\t}\r\n\r\n\r\n\r\n}","export const constants = {\r\n\tcanvasBounds: {\r\n\t\twidth:500,\r\n\t\theight:500\r\n\t},\r\n\t// Gamebounds cannot be smaller than canvasBounds\r\n\tgameBounds: {\r\n\t\twidth:1000,\r\n\t\theight:1000\r\n\t},\r\n\tminimapBounds: {\r\n\t\twidth: 100,\r\n\t\theight: 100,\r\n\t}\r\n}","import { Vect } from \"./Vect\";\r\nimport {constants} from \"./constants\";\r\n\r\nexport function wrapAround(position, bounds = constants.gameBounds) {\r\n\r\n\tlet {width,height} = bounds;\r\n\r\n\tvar {x,y} = position;\r\n\tif (x > width) x -= width;\r\n\tif (x < 0) x += width;\r\n\tif (y > height) y -= height;\r\n\tif (y < 0) y += height;\r\n\treturn new Vect(x,y);\r\n}\r\n\r\nexport function distance(v1,v2) {\r\n\treturn Math.sqrt((v1.x - v2.x)**2 + (v1.y-v2.y)**2);\r\n}\r\n\r\n// Rotates the vector (x,y) anticlockwise by deg degrees\r\nexport function rotateVector2d(vect,deg) {\r\n\tlet {x,y} = vect;\r\n\tlet rad = deg*Math.PI/180;\r\n\tlet cos = Math.cos(rad);\r\n\tlet sin = Math.sin(rad);\r\n\treturn {\r\n\t\tx : cos*x - sin*y,\r\n\t\ty : sin*x + cos*y\r\n\t}\r\n}\r\n\r\n","\r\nimport {wrapAround} from './2dgrid.js';\r\nimport {constants} from \"./constants\";\r\nimport { Vect } from \"./Vect\";\r\n\r\nexport function relativeCoords(vect, focus) {\r\n\t\r\n\tlet {width,height} = constants.canvasBounds;\r\n\r\n\tlet {x,y} = vect;\r\n\tx = x - focus.x + width/2;\r\n\ty = y - focus.y + height/2;\r\n\r\n\treturn wrapAround({x,y},constants.gameBounds);\r\n}","import { rotateVector2d, wrapAround } from \"../utils/2dgrid\";\r\nimport { relativeCoords } from \"../utils/camera\";\r\nimport { Vect } from \"../utils/Vect\";\r\n\r\nexport default class Ship {\r\n\tconstructor(args) {\r\n\t\tthis.pos = args.pos;\r\n\t\tthis.vel = args.vel || new Vect(0,0);\r\n\t\tthis.radius = 14.5;\r\n\t\tthis.angle = args.angle || 0;\r\n\t\tthis.lastFiredTime = new Date();\r\n\t}\r\n\r\n\trender(state) {\r\n\r\n\t\t\r\n\t\tif (state.input.pressedKeys.left) {\r\n\t\t\tthis.angle -= 7;\r\n\t\t}\r\n\t\tif (state.input.pressedKeys.right) {\r\n\t\t\tthis.angle += 7;\r\n\t\t}\r\n\t\tif(state.input.pressedKeys.forward) {\r\n\t\t\tvar forwardAngle = this.angle - 90;\r\n\t\t\t\r\n\t\t\tthis.vel = this.vel.add(new Vect(0.20,0).rotate(forwardAngle * Math.PI / 180));\r\n\t\t}\r\n\t\t\r\n\r\n\t\tthis.pos = this.pos.add(this.vel);\r\n\t\tthis.pos = wrapAround(this.pos);\r\n\r\n\t\tif( this.angle > 360) this.angle -= 360;\r\n\t\tif (this.angle < 0) this.angle += 360;\r\n\r\n\t\t// Drag \r\n\t\tthis.vel = this.vel.dot(0.98);\r\n\t\t\r\n\t\tvar temp = this.pos;\r\n\t\tif (state.shipCam) {\r\n\t\t\ttemp = relativeCoords(temp,temp);\r\n\t\t}\r\n\t\t\r\n\r\n\t\tconst ctx = state.context;\r\n\t\tctx.save();\r\n\t\tctx.translate(0.5,0.5);\r\n\t\tctx.translate(temp.x,temp.y);\r\n\t\tctx.rotate(this.angle * Math.PI/180);\r\n\t\tctx.strokeStyle = \"#000000\";\r\n\t\tctx.fillStyle = \"#888888\";\r\n\t\tctx.lineWidth = 0.5;\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(0,0);\r\n\t\tctx.lineTo(12.49,7.21);\r\n\t\tctx.lineTo(0,-14.44);\r\n\t\tctx.lineTo(-12.49,7.21);\r\n\t\tctx.closePath();\r\n\t\tctx.fill(); ctx.stroke();\r\n\t\tctx.restore();\r\n\t\r\n\t}\r\n\r\n\tgetHitbox() {\r\n\t\tlet hitbox = [];\r\n\t\thitbox.push({x: 12.49, y: 7.21});\r\n\t\thitbox.push({x: 0, y: -14.44});\r\n\t\thitbox.push({x: -12.49, y: 7.21});\r\n\r\n\t\r\n\t\thitbox = hitbox.map((e) => {\r\n\t\t\t\r\n\t\t\tlet {x,y} = rotateVector2d(e,this.angle);\r\n\t\t\treturn {x:x+this.pos.x, y:y+this.pos.y};\r\n\t\t});\r\n\t\treturn hitbox;\r\n\t\t\r\n\t}\r\n}","var polygonsIntersect = require(\"polygons-intersect\");\r\n\r\n\r\n// Returns random number in range [low,high]\r\nexport function randomBetween(low, high) {\r\n\treturn low + Math.random()*(high-low);\r\n}\r\n\r\nexport function checkPolygonIntersection (arr1, arr2) {\r\n\tif (polygonsIntersect(arr1,arr2).length !== 0) return true;\r\n\treturn false;\r\n\r\n}\r\n","import {wrapAround, rotateVector2d} from '../utils/2dgrid';\r\nimport {randomBetween} from '../utils/math';\r\nimport { relativeCoords } from '../utils/camera';\r\nimport { Vect } from '../utils/Vect';\r\nconst degToRadians = deg => deg*Math.PI/180;\r\nconst rotateUnit = (degrees) => {\r\n\tvar radians = degToRadians(degrees);\r\n\treturn { x : Math.cos(radians) , y : Math.sin(radians)}\r\n}\r\n\r\nexport default class Asteroid {\r\n\tconstructor(args) {\r\n\t\tthis.pos=  args.pos || new Vect(0,0);\r\n\t\tthis.r = args.r || 0;\r\n\t\tthis.vel = args.vel || new Vect(0,0);\r\n\t\tthis.dr = args.dr || 0;\r\n\t\tthis.distances = args.vertexDistances || [-1];\r\n\t\tthis.sizeCategory = args.sizeCategory || 3;\r\n\r\n\t\tthis.delete = false;\r\n\r\n\t\t// If distances were not manually provided, generate random distances \r\n\t\tif (this.distances.length === 1) {\r\n\t\t\tthis.distances.splice(0,1);\r\n\t\t\tlet m = this.sizeCategory*10;\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tlet r = this.sizeCategory*randomBetween(-2,2);\r\n\t\t\t\tthis.distances.push(Math.round(m + r));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Generate array of points of the asteroid\r\n\t\tthis.points = this.distances.map((v,i) => {\r\n\t\t\tvar unitVector = rotateUnit(60*i);\r\n\t\t\treturn {x: v*unitVector.x, y: v*unitVector.y};\r\n\t\t});\r\n\r\n\t\tthis.radius = this.distances.reduce((a,b) => Math.max(a,b));\r\n\t}\r\n\r\n\trender(state,ship) {\r\n\r\n\t\tthis.pos = this.pos.add(this.vel);\r\n\t\tthis.r += this.dr;\r\n\t\t\r\n\t\tthis.pos = wrapAround(this.pos);\r\n\t\t\r\n\t\tvar temp = this.pos;\r\n\t\tif (state.shipCam) {\r\n\t\t\ttemp = relativeCoords(temp,ship);\r\n\t\t}\r\n\r\n\t\t// Generate an svg path string from the points given\r\n\t\tvar pathString = `M${ this.points[0].x} ${this.points[0].y} `\r\n\t\tfor (let i = 1; i < this.points.length; i++) {\r\n\t\t\tpathString += `L ${this.points[i].x} ${this.points[i].y} `;\r\n\t\t}\r\n\t\tpathString += 'Z';\r\n\r\n\t\tconst ctx = state.context;\r\n\t\tctx.save();\r\n\t\t\r\n\t\tctx.translate(0.5,0.5);\r\n\t\tctx.translate(temp.x,temp.y);\r\n\t\tctx.rotate(this.r * Math.PI/180);\r\n\t\tctx.strokeStyle = \"#000000\";\r\n\t\tctx.fillStyle = \"#ffffff\";\r\n\t\tctx.lineWidth = 1;\r\n\t\tvar path = new Path2D(pathString);\r\n\t\tctx.stroke(path);\r\n\t\tctx.restore();\r\n\r\n\t\t\r\n\r\n\t}\r\n\r\n\t// Get array of points showing the asteroid\r\n\tgetHitbox() {\r\n\t\tlet hitbox = this.points.map(e => {\r\n\t\t\tlet {x,y} = rotateVector2d(e,this.r);\r\n\t\t\treturn {x: x+this.pos.x, y: y + this.pos.y};\r\n\t\t});\r\n\r\n\r\n\t\treturn hitbox;\r\n\t\t\r\n\t}\r\n}","import { Vect } from \"../utils/Vect\";\r\nimport { wrapAround } from \"../utils/2dgrid\";\r\nimport { relativeCoords } from \"../utils/camera\";\r\n\r\nexport default class Bullet {\r\n\tconstructor(args) {\r\n\t\tthis.pos = args.pos || new Vect(0,0);\r\n\t\tthis.vel = args.vel || new Vect();\r\n\t\tthis.lifeTime = args.lifeTime || 200;\r\n\t\tthis.delete = 0;\r\n\t\tthis.radius = 2;\r\n\t}\r\n\t\r\n\trender(state,ship) {\r\n\r\n\t\tthis.pos = wrapAround(this.pos.add(this.vel));\r\n\r\n\t\tvar temp = this.pos;\r\n\t\tif (state.shipCam) {\r\n\t\t\ttemp = relativeCoords(temp,ship);\r\n\t\t}\r\n\t\r\n\t\tthis.lifeTime--;\r\n\t\tif (this.lifeTime === 0) {\r\n\t\t\tthis.delete = true;\r\n\t\t}\r\n\t\tconst ctx = state.context;\r\n\t\tctx.save();\r\n\t\tctx.translate(0.5,0.5);\r\n\t\tctx.beginPath();\r\n\t\tctx.fillStyle = \"#ff0000\";\r\n\t\tctx.lineWidth = 0.5;\r\n\t\tctx.arc(temp.x,temp.y,2,0,2*Math.PI);\r\n\t\tctx.fill();\r\n\t\tctx.restore();\r\n\t}\r\n}","import { constants } from \"../utils/constants\";\r\n\r\n\r\nexport class Minimap {\r\n\t\r\n\r\n\trender(state,ship,asteroids) {\r\n\r\n\r\n\r\n\t\tlet ctx = state.minimapContext;\r\n\r\n\t\tctx.save();\r\n\t\tctx.fillStyle = \"#fff\"; // Clearing screen\r\n\t\tctx.fillRect(0,0,constants.minimapBounds.width, constants.minimapBounds.height);\r\n\r\n\t\tctx.translate(0.5,0.5);\r\n\t\tctx.fillStyle = \"#888\";\r\n\t\tlet x,y ;\r\n\t\tasteroids.forEach(e => {\r\n\t\t\tctx.beginPath();\r\n\t\t\tx = e.pos.x/constants.gameBounds.width * constants.minimapBounds.width;\r\n\t\t\ty = e.pos.y/constants.gameBounds.height * constants.minimapBounds.height;\r\n\t\t\tctx.arc(x,y,e.sizeCategory,0,2*Math.PI);\r\n\t\t\tctx.fill();\r\n\r\n\t\t});\r\n\r\n\t\tctx.fillStyle = \"red\";\r\n\t\t\r\n\t\tx = ship.pos.x/constants.gameBounds.width * constants.minimapBounds.width;\r\n\t\ty = ship.pos.y/constants.gameBounds.height * constants.minimapBounds.height;\r\n\t\tctx.beginPath();\r\n\t\tctx.arc(x,y,2,0,2*Math.PI);\r\n\t\tctx.fill();\r\n\t\tctx.restore();\r\n\t}\r\n} ","import React from 'react';\n\nimport InputManager from './InputManager';\nimport Ship from './gameComponents/Ship';\nimport Asteroid from './gameComponents/Asteroid';\nimport Bullet from './gameComponents/Bullet';\nimport { distance } from './utils/2dgrid';\nimport {randomBetween, checkPolygonIntersection} from './utils/math';\nimport {relativeCoords} from './utils/camera';\nimport { Vect } from './utils/Vect';\nimport { drawDots } from './gameComponents/background';\nimport { constants } from \"./utils/constants\";\nimport { Minimap } from './gameComponents/Minimap';\n\n\n\nvar GameStatus = {\n\tRUNNING : 1,\n\tOVER : 2\n}\n\nvar animationFrameId = null;\n\nclass App extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinput: new InputManager(),\n\t\t\tcontext: null,\n\t\t\tminimapContext: null,\n\t\t\tscore: 0,\n\t\t\tlevel: 1,\n\t\t\tshipCam: true,\n\t\t}\n\n\t\t\n\t\t// Bind member functions\n\t\tthis.draw = this.draw.bind(this);\n\t\tthis.resetHandler = this.resetHandler.bind(this);\n\t\tthis.initLevel = this.initLevel.bind(this);\n\t\tthis.debugFunc = this.debugFunc.bind(this);\n\n\t\t// Initialize variables\n\t\tthis.gameStatus = GameStatus.RUNNING;\n\t\tthis.asteroids = [];\n\t\tthis.bullets = [];\n\t\tthis.minimap = new Minimap();\n\n\t\t// Initialize level 1\n\t\tthis.initLevel(1);\n\t\n\t\t\n\t}\n\n\tcomponentDidMount() {\n\t\t\n\t\tthis.state.input.bindKeys(); // Setup inputhandler\n\t\tconst context = this.refs.canvas.getContext('2d'); //Setup Context\n\t\tconst minimapContext = this.refs.minimap.getContext('2d');\n\t\tthis.setState({context:context, minimapContext:minimapContext});\n\t\tanimationFrameId = requestAnimationFrame(this.draw); // Start animation\n\t\t\n\n\t\tvar off = document.createElement('canvas');\n\t\toff.width = constants.gameBounds.width;\n\t\toff.height = constants.gameBounds.height;\n\t\tvar ctx = off.getContext('2d');\n\t\tctx.fillStyle = \"#000\";\n\n\t\tfor (let i = 0; i < constants.canvasBounds.width; i += 20) {\n\t\t\tfor (let j = 0; j < constants.canvasBounds.height; j += 20) {\n\t\t\t\tctx.fillRect(i,j,1,1);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.back = off;\n\t\t\n\n\n\t}\n\n\t// clickHandler for the reset button\n\tresetHandler() {\n\t\t\n\t\tcancelAnimationFrame(animationFrameId); // Cancel animation frame (in case it is running)\n\t\tthis.setState({score:0,level:1}) \n\t\tthis.initLevel(1); // Place objects for level 1\n\t\tthis.gameStatus = GameStatus.RUNNING;\n\t\tthis.refs.reset.blur(); // Take away focus from the reset button\n\t\tanimationFrameId  = requestAnimationFrame(this.draw); // Start animation again\n\t}\n\n\t// Places the ship and the asteroids required for the level (randomly)\n\tinitLevel(level) {\n\n\t\tthis.ship = new Ship({pos:new Vect(50,50)});\n\t\tthis.asteroids = [];\n\t\tfor (let i = 0; i < level; i++) {\n\n\t\t\t// Generates an asteroid with random position, velocity and shape\n\t\t\tlet velMag = randomBetween(1,3);\n\t\t\tlet newDr = randomBetween(-2,2);\n\t\t\tlet newPos = new Vect(randomBetween(200,constants.gameBounds.width), randomBetween(200,constants.gameBounds.width));\n\t\t\tlet newVel = new Vect(velMag,0).rotate(randomBetween(0,360));\n\n\t\t\tthis.asteroids.push(new Asteroid({pos : newPos, vel:newVel, dr: newDr}));\n\t\t}\n\t\tthis.bullets = [];\n\t}\n\n\n\n\n\tdraw() {\n\n\t\tconst ctx = this.state.context;\n\n\t\tctx.fillStyle = \"#fff\";\n\t\tctx.font = \"30px Arial\";\n\t\tctx.fillRect(0,0,constants.canvasBounds.width,constants.canvasBounds.height); // Clear screen\n\t\t\n\t\t//ctx.drawImage(this.back,0,0);\n\n\t\tdrawDots(ctx,this.back,this.ship.pos);\n\n\t\t// Fire a new bullet if the previous one was fired >300ms ago and space is held down\n\t\tif (this.state.input.pressedKeys.space && new Date().getTime() - this.ship.lastFiredTime > 300) {\n\t\t\tthis.ship.lastFiredTime = new Date();\n\t\t\tvar newDx, newDy;\n\t\t\tnewDx =  5 * Math.sin(this.ship.angle*Math.PI/180.0) + this.ship.vel.x;\n\t\t\tnewDy = -5 * Math.cos(this.ship.angle*Math.PI/180.0) + this.ship.vel.y;\n\t\t\tthis.bullets.push(new Bullet({pos: this.ship.pos, vel: new Vect(newDx,newDy)}));\n\t\t}\n\t\t\n\t\t// Check collisions between asteroids and bullets\n\t\tthis.bullets.forEach((b,i,bArr) => {\n\t\t\tthis.asteroids.forEach((a,j,aArr) => {\n\n\t\t\t\t// True if b collides with a\n\t\t\t\tif (distance(b.pos,a.pos) < b.radius + a.radius && checkPolygonIntersection([b.pos], a.getHitbox())) {\n\n\t\t\t\t\t// Delete bullet, initialize 2 new asteroids in a smaller size class\n\t\t\t\t\tbArr.splice(i,1);\n\t\t\t\t\tvar nextSize = a.sizeCategory-1;\n\t\t\t\t\tif (nextSize > 0) {\n\t\t\t\t\t\tlet newVel = a.vel.rotate((Math.random()*30 + 30)*Math.PI/180).dot(1.2);\n\t\t\t\t\t\taArr.push(new Asteroid({pos:a.pos,vel:newVel,dr: 6* Math.random() - 3,sizeCategory:nextSize}));\n\t\t\t\t\t\tnewVel = a.vel.rotate(-(Math.random()*30 + 30) * Math.PI/180).dot(1.2);\n\t\t\t\t\t\taArr.push(new Asteroid({pos:a.pos,vel:newVel,dr: 6* Math.random() - 3,sizeCategory:nextSize}));\n\t\t\t\t\t}\n\t\t\t\t\taArr.splice(j,1);\n\t\t\t\t\tthis.setState((state) => ({score:state.score + 10}));\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\n\t\t\n\n\n\t\t// Collision between Ship and Asteroids\n\t\tthis.asteroids.forEach((a,i,arr) => {\n\n\t\t\t// If the ship's hitbox and the asteroids hitbox collides\n\t\t\tif (distance(this.ship.pos, a.pos) < this.ship.radius + a.radius \n\t\t\t&& checkPolygonIntersection(this.ship.getHitbox(), a.getHitbox())) {\t\t\t\t\n\t\t\t\t\n\t\t\t\tthis.gameStatus = GameStatus.OVER;\n\t\t\t\tctx.fillStyle = \"#000\";\n\t\t\t\tctx.fillText(\"Game Over\",200,200);\n\t\t\t}\n\t\t})\n\n\t\t// Render all the objects\n\t\tthis.ship.render(this.state);\n\t\tthis.asteroids.forEach((e,i,arr) => {\n\t\t\tif (e.delete) {\n\t\t\t\tarr.splice(i,1);\n\t\t\t} else {\n\t\t\t\te.render(this.state,this.ship.pos);\n\t\t\t}\n\t\t});\n\t\tthis.bullets.forEach((e,i,arr) => {\n\t\t\tif (e.delete) {\n\t\t\t\tarr.splice(i,1);\n\t\t\t}\n\t\t\telse\n\t\t\t\te.render(this.state,this.ship.pos)\n\t\t});\n\n\t\t// If no more asteroids, start the next level\n\t\tif(this.asteroids.length === 0) {\n\t\t\tthis.initLevel(this.state.level + 1);\n\t\t\tthis.setState((state) => ({level:state.level+1}));\n\t\t}\n\n\t\tthis.minimap.render(this.state, this.ship, this.asteroids);\n\n\n\t\t// Show next frame, if GameStatus is running\n\t\tif (this.gameStatus === GameStatus.RUNNING)\n\t\t\tanimationFrameId = requestAnimationFrame(this.draw);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.state.input.unbindKeys();\n\t}\n\n\tdebugFunc() {\n\t\t// console.log(this.asteroids[0].pos);\n\t\t// console.log(relativeCoords(this.asteroids[0].pos, this.ship.pos));\n\t}\n\n\tcameraHandler() {\n\n\t\tthis.setState(state => ({shipCam: ! state.shipCam}));\n\t\tthis.refs.cam.blur();\n\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Asteroids!</h1>\n\t\t\t\t<canvas ref = \"canvas\" id = \"canvas\" width = {constants.canvasBounds.width} height = {constants.canvasBounds.height}/>\n\t\t\t\t<div id = \"gameStats\">\n\t\t\t\t\t<button ref = \"reset\" onClick = {this.resetHandler}>Reset</button>\n\t\t\t\t\t<div id = \"Score\">Score: {this.state.score}</div>\n\t\t\t\t\t<div id = \"level\">Level: {this.state.level}</div>\n\t\t\t\t\t<button ref = \"debug\" onClick = {this.debugFunc}>Debug</button><br/>\n\t\t\t\t\t<canvas ref = \"minimap\" id = \"minimap\" width = \"100\" height = \"100\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n  \n}\n\nexport default App;\n","\r\n\r\n\r\nexport function drawDots(ctx, background, focus) {\r\n\r\n\t\r\n\tvar offX,offY;\r\n\t\r\n\toffX = 20 - focus.x%20;\r\n\toffY = 20 - focus.y%20;\r\n\r\n\tctx.drawImage(background,offX,offY);\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}